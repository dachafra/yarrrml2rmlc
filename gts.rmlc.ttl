@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix ex: <http://example.com/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix rev: <http://purl.org/stuff/rev#>.
@prefix gtfs: <http://vocab.gtfs.org/terms#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix schema: <http://schema.org/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix rmlc: <http://www.oeg-upm.net/ns/rmlc#>
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
@base <http://example.org/>
<stoptimes>
	rml:logicalSource [
		rml:source "emt-gtfs/stop_times.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/stoptimes/{trip_id}-{stop_id}-{arrival_time}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:StopTime;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:arrivalTime;
		rr:objectMap [
			rml:reference "arrival_time";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:departureTime;
		rr:objectMap [
			rml:reference "departure_time";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:stopSequence;
		rr:objectMap [
			rml:reference "stop_sequence";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:headsign;
		rr:objectMap [
			rml:reference "stop_headsign";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:pickupType;
		rr:objectMap [
			rr:template "http://vocab.gtfs.org/terms#PickupType={pickup_type}";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:dropOffType;
		rr:objectMap [
			rr:template "http://vocab.gtfs.org/terms#DropOffType={drop_off_type}";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:distanceTraveled;
		rr:objectMap [
			rml:reference "shape_dist_traveled";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:trip;
		rr:objectMap [
			rr:parentTriplesMap <trips>;
			rmlc:joinCondition [
				rmlc:child "{trip_id}";
				rmlc:parent "{trip_id}";
			];
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:stop;
		rr:objectMap [
			rr:parentTriplesMap <stops>;
			rmlc:joinCondition [
				rmlc:child "{stop_id}";
				rmlc:parent "{stop_id}";
			];
		];
	].
<trips>
	rml:logicalSource [
		rml:source "emt-gtfs/trips.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/trips/{trip_id}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:Trip;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:headsign;
		rr:objectMap [
			rml:reference "trip_headsign";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:shortName;
		rr:objectMap [
			rml:reference "trip_short_name";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:direction;
		rr:objectMap [
			rml:reference "direction_id";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:block;
		rr:objectMap [
			rml:reference "block_id";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:wheelchairAccessible;
		rr:objectMap [
			rml:reference "wheelchair_accesible";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:service;
		rr:objectMap [
			rr:parentTriplesMap <services>;
			rmlc:joinCondition [
				rmlc:child "{service_id}";
				rmlc:parent "{service_id}";
			];
			rr:parentTriplesMap <services_dates>;
			rmlc:joinCondition [
				rmlc:child "{service_id}";
				rmlc:parent "{service_id}";
			];
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:route;
		rr:objectMap [
			rr:parentTriplesMap <routes>;
			rmlc:joinCondition [
				rmlc:child "{route_id}";
				rmlc:parent "{route_id}";
			];
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:shape;
		rr:objectMap [
			rr:parentTriplesMap <shapes>;
			rmlc:joinCondition [
				rmlc:child "{shape_id}";
				rmlc:parent "{shape_id}";
			];
		];
	].
<routes>
	rml:logicalSource [
		rml:source "emt-gtfs/routes.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/routes/{route_id}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:Route;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:shortName;
		rr:objectMap [
			rml:reference "route_short_name";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:longName;
		rr:objectMap [
			rml:reference "route_long_name";
		];
	];
	rr:predicateObjectMap[
		rr:predicate dct:description;
		rr:objectMap [
			rml:reference "route_desc";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:routeType;
		rr:objectMap [
			rr:template "http://vocab.gtfs.org/terms#RouteType={route_type}";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:routeUrl;
		rr:objectMap [
			rml:reference "route_url";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:color;
		rr:objectMap [
			rml:reference "route_color";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:textColor;
		rr:objectMap [
			rml:reference "gtfs:textColor";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:agency;
		rr:objectMap [
			rr:parentTriplesMap <agency>;
			rmlc:joinCondition [
				rmlc:child "{agency_id}";
				rmlc:parent "{agency_id}";
			];
		];
	].
<agency>
	rml:logicalSource [
		rml:source "emt-gtfs/agency.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/agency/{agency_id}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:Agency;
		];
	];
	rr:predicateObjectMap[
		rr:predicate foaf:page;
		rr:objectMap [
			rml:reference "agency_url";
		];
	];
	rr:predicateObjectMap[
		rr:predicate foaf:name;
		rr:objectMap [
			rml:reference "agency_name";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:timeZone;
		rr:objectMap [
			rml:reference "agency_timezone";
		];
	];
	rr:predicateObjectMap[
		rr:predicate dct:language;
		rr:objectMap [
			rml:reference "agency_lang";
		];
	];
	rr:predicateObjectMap[
		rr:predicate foaf:phone;
		rr:objectMap [
			rml:reference "agency_phone";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:fareUrl;
		rr:objectMap [
			rml:reference "agency_fare_url";
		];
	].
<stops>
	rml:logicalSource [
		rml:source "emt-gtfs/stops.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/stops/{stop_id}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:Stop;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:code;
		rr:objectMap [
			rml:reference "stop_code";
		];
	];
	rr:predicateObjectMap[
		rr:predicate foaf:name;
		rr:objectMap [
			rml:reference "stop_name";
		];
	];
	rr:predicateObjectMap[
		rr:predicate dct:description;
		rr:objectMap [
			rml:reference "stop_desc";
		];
	];
	rr:predicateObjectMap[
		rr:predicate geo:lat;
		rr:objectMap [
			rml:reference "stop_lat";
		];
	];
	rr:predicateObjectMap[
		rr:predicate geo:long;
		rr:objectMap [
			rml:reference "stop_long";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:zone;
		rr:objectMap [
			rml:reference "zone_id";
		];
	];
	rr:predicateObjectMap[
		rr:predicate foaf:page;
		rr:objectMap [
			rml:reference "stop_url";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:locationType;
		rr:objectMap [
			rml:reference "location_type";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:parentStation;
		rr:objectMap [
			rml:reference "parent_station";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:timeZone;
		rr:objectMap [
			rml:reference "stop_timezone";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:weelchairAccessible;
		rr:objectMap [
			rml:reference "wheelchair_boarding";
		];
	].
<services_dates>
	rml:logicalSource [
		rml:source "emt-gtfs/calendar_dates.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/services_dates/{service_id}-{date}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:ServiceDates;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:service;
		rr:objectMap [
			rml:reference "service_id";
		];
	];
	rr:predicateObjectMap[
		rr:predicate dct:date;
		rr:objectMap [
			rml:reference "date";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:dateAddition;
		rr:objectMap [
			rml:reference "exeception_type";
		];
	].
<fares>
	rml:logicalSource [
		rml:source "emt-gtfs/fare_attributes.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/fare/{fare_id}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:Fare;
		];
	];
	rr:predicateObjectMap[
		rr:predicate schema:price;
		rr:objectMap [
			rml:reference "price";
		];
	];
	rr:predicateObjectMap[
		rr:predicate schema:priceCurrency;
		rr:objectMap [
			rml:reference "currency_type";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:paymentMethod;
		rr:objectMap [
			rr:template "http://vocab.gtfs.org/terms#PaymentMethod={payment_method}";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:transfers;
		rr:objectMap [
			rr:template "http://vocab.gtfs.org/terms#Transfers={transfers}";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:transferExpiryTime;
		rr:objectMap [
			rml:reference "transfer_duration";
		];
	].
<services>
	rml:logicalSource [
		rml:source "emt-gtfs/calendar.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/service/{service_id}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:Service;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:monday;
		rr:objectMap [
			rml:reference "monday";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:tuesday;
		rr:objectMap [
			rml:reference "tuesday";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:wednesday;
		rr:objectMap [
			rml:reference "wednesday";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:thursday;
		rr:objectMap [
			rml:reference "thursday";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:friday;
		rr:objectMap [
			rml:reference "friday";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:saturday;
		rr:objectMap [
			rml:reference "saturday";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:sunday;
		rr:objectMap [
			rml:reference "sunday";
		];
	];
	rr:predicateObjectMap[
		rr:predicate schema:startDate;
		rr:objectMap [
			rml:reference "start_date";
		];
	];
	rr:predicateObjectMap[
		rr:predicate schema:endDate;
		rr:objectMap [
			rml:reference "end_date";
		];
	].
<feed>
	rml:logicalSource [
		rml:source "emt-gtfs/feed_info.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/feed/{feed_publisher_name}";
	];
	rr:predicateObjectMap[
		rr:predicate dct:publisher;
		rr:objectMap [
			rml:reference "feed_publisher_name";
		];
	];
	rr:predicateObjectMap[
		rr:predicate foaf:page;
		rr:objectMap [
			rml:reference "feed_published_url";
		];
	];
	rr:predicateObjectMap[
		rr:predicate dct:language;
		rr:objectMap [
			rml:reference "feed_lang";
		];
	];
	rr:predicateObjectMap[
		rr:predicate schema:startDate;
		rr:objectMap [
			rml:reference "feed_start_date";
		];
	];
	rr:predicateObjectMap[
		rr:predicate schema:endDate;
		rr:objectMap [
			rml:reference "feed_end_date";
		];
	];
	rr:predicateObjectMap[
		rr:predicate schema:version;
		rr:objectMap [
			rml:reference "feed_version";
		];
	].
<shapes>
	rml:logicalSource [
		rml:source "emt-gtfs/shapes.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/shape/{shape_id}";
	];
	rr:predicateObjectMap[
		rr:predicate geo:lat;
		rr:objectMap [
			rml:reference "shape_pt_lat";
		];
	];
	rr:predicateObjectMap[
		rr:predicate geo:long;
		rr:objectMap [
			rml:reference "shape_pt_lon";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:pointSequence;
		rr:objectMap [
			rml:reference "shape_pt_sequence";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:distanceTraveled;
		rr:objectMap [
			rml:reference "shape_dist_traveled";
		];
	].
<farerules>
	rml:logicalSource [
		rml:source "emt-gtfs/fare_rules.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/farerules/{fare_id}-{route_id}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:FareRule;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:originZone;
		rr:objectMap [
			rml:reference "origin_id";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:destinationZone;
		rr:objectMap [
			rml:reference "destination_id";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:zone;
		rr:objectMap [
			rml:reference "contains_id";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:route;
		rr:objectMap [
			rr:parentTriplesMap <routes>;
			rmlc:joinCondition [
				rmlc:child "{route_id}";
				rmlc:parent "{route_id}";
			];
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:fare;
		rr:objectMap [
			rr:parentTriplesMap <routes>;
			rmlc:joinCondition [
				rmlc:child "{route_id}";
				rmlc:parent "{route_id}";
			];
		];
	].
<frequencies>
	rml:logicalSource [
		rml:source "emt-gtfs/frequencies.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/frequency/{trip_id}-{start_time}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:Frequency;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:startTime;
		rr:objectMap [
			rml:reference "start_time";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:endTime;
		rr:objectMap [
			rml:reference "end_time";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:headwaySeconds;
		rr:objectMap [
			rml:reference "headway_secs";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:exactTimes;
		rr:objectMap [
			rml:reference "exact_times";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:trip;
		rr:objectMap [
			rr:parentTriplesMap <trips>;
			rmlc:joinCondition [
				rmlc:child "{trip_id}";
				rmlc:parent "{trip_id}";
			];
		];
	].
<transfers>
	rml:logicalSource [
		rml:source "emt-gtfs/transfers.csv";
		rml:referenceFormulation ql:CSV 
	];

	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://linkedgtfs.com/CITY/transfer/{from_stop_id}-{to_stop_id}-{transfer_type}";
	];
	rr:predicateObjectMap[
		rr:predicate rdf:type;
		rr:objectMap [
			rr:constant gtfs:TransferRule;
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:transferType;
		rr:objectMap [
			rr:template "http://vocab.gtfs.org/terms#TransferType={transfer_type}";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:minimumTransferTime;
		rr:objectMap [
			rml:reference "min_transfer_time";
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:originStop;
		rr:objectMap [
			rr:parentTriplesMap <stops>;
			rmlc:joinCondition [
				rmlc:child "{from_stop_id}";
				rmlc:parent "{stop_id}";
			];
		];
	];
	rr:predicateObjectMap[
		rr:predicate gtfs:destinationStop;
		rr:objectMap [
			rr:parentTriplesMap <stops>;
			rmlc:joinCondition [
				rmlc:child "{to_stop_id}";
				rmlc:parent "{stop_id}";
			];
		];
	].

